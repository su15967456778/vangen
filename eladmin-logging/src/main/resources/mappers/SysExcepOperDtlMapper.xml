<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.zhengjie.repository.SysExcepOperDtlMapper">
    <resultMap id="BaseResultMap" type="me.zhengjie.domain.SysExcepOperDtl">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="oper_type" jdbcType="VARCHAR" property="operType"/>
        <result column="oper_data" jdbcType="VARCHAR" property="operData"/>
        <result column="oper_time" jdbcType="TIMESTAMP" property="operTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="excep_log_id" jdbcType="INTEGER" property="excepLogId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, oper_type, oper_data, oper_time, create_time, update_time, excep_log_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_excep_oper_dtl
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_excep_oper_dtl
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="save" parameterType="me.zhengjie.domain.SysExcepOperDtl">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_excep_oper_dtl (oper_type, oper_data, oper_time,
        create_time, update_time, excep_log_id
        )
        values (#{operType,jdbcType=VARCHAR}, #{operData,jdbcType=VARCHAR}, #{operTime,jdbcType=TIMESTAMP},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{excepLogId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="me.zhengjie.domain.SysExcepOperDtl">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_excep_oper_dtl
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="operType != null">
                oper_type,
            </if>
            <if test="operData != null">
                oper_data,
            </if>
            <if test="operTime != null">
                oper_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="excepLogId != null">
                excep_log_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="operType != null">
                #{operType,jdbcType=VARCHAR},
            </if>
            <if test="operData != null">
                #{operData,jdbcType=VARCHAR},
            </if>
            <if test="operTime != null">
                #{operTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="excepLogId != null">
                #{excepLogId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="me.zhengjie.domain.SysExcepOperDtl">
        update sys_excep_oper_dtl
        <set>
            <if test="operType != null">
                oper_type = #{operType,jdbcType=VARCHAR},
            </if>
            <if test="operData != null">
                oper_data = #{operData,jdbcType=VARCHAR},
            </if>
            <if test="operTime != null">
                oper_time = #{operTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="excepLogId != null">
                excep_log_id = #{excepLogId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="me.zhengjie.domain.SysExcepOperDtl">
    update sys_excep_oper_dtl
    set oper_type = #{operType,jdbcType=VARCHAR},
      oper_data = #{operData,jdbcType=VARCHAR},
      oper_time = #{operTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      excep_log_id = #{excepLogId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>